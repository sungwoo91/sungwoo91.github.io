교육 프로그램을 수강하면서 복습 할겸 의식의 흐름대로 수업 내용을 적으려고 한다.

# Linux
- 리눅스는 리누스 토발즈가 학부 1학년때 뚝딱뚝딱 만들었음 (태넌바움 교수님한테 네트워크 쪽도 개발해달라고 메일보냈다가 자기가 만들었다고함)
- 리눅스는 커널, 쉘, 유틸리티프로그램 이렇게 이루어진다고 볼 수 있음
- Debian에서 사용성을 증대시킨게 Ubuntu
- 레드햇에서 리눅스를 상업용으로 팔겠다고 하고 커뮤니티 버전으로 Fedora를 냈음
- 오픈소스 진영에서 리눅스를 상업용으로 파는거에 반해서 레드햇을 클론해서 낸게 CentOS
- 하지만 회사에서 쓰는건 RHEL 짱짱

# Container
- 가상화는 하이퍼바이저라는 소프트웨어가 있고, 이 소프트웨어 위에 독립된 OS와 독립된 자원등을 받아 실행되는 것
- 컨테이너는 Container Engine이 데몬으로 실행되고, 내부적으로 리눅스 기술들을 이용하여 가상화와 비슷한 효과를 볼 수 있게함
- 컨테이너는 Host OS 하나위에서 실행 되기 때문에 Host OS의 커널을 컨테이너들이 공유함
- 리눅스 기술중 chroot, cgroup, namespace 등을 이용하여 컨테이너화를 시킴
- chroot는 특정 디렉토리를 root로 만들어 상위의 디렉토리와 격리시킬 수 있음
- cgroup은 자원 할당을 제어 할 수 있는 커널 기능
- namespace는 특정 자원에 대해 가시성?을 제어할 수 있는 커널 기능
- 특정 디렉토리를 자기만 루트인 것 처럼 만들고, 자원도 그 루트쪽만 쓸 수 있게하고, 다른 곳에서 그 자원을 알 수 없게하면 컨테이너 완성
- 리눅스는 xfs라는 파일시스템을 쓰고 있고(inode테이블에서 inode를 찾아가는 방식) 컨테이너는 레이어 구조를 이용하는 overayfs를 사용한다.
- 이 레이어 구조 때문에 파일 시스템에서 패치된 부분만 덮어 씌울 수 있고 롤백도 간편하게 할 수 있다.
- 도커에서 docker0이라는 브릿지를 통해 Host로 들어온 주소를 컨테이너에 맞게 라우팅? 해준다.
- 내부적으로는 iptables라는 리눅스 기술을 이용한다.